{"version":3,"sources":["components/PostTile.js","components/Header.js","components/Loading.js","queries/queries.js","pages/Homepage.js","components/Subcomments.js","components/CommentTile.js","pages/Commentpage.js","App.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","padding","margin","background","title","color","fontSize","underline","baseURL","postInfo","postInfoLinks","textDecoration","noLinkPostInfoLinks","PostTile","hasUrl","id","user","url","comments","score","time","classes","noHttpsURL","substring","slash","indexOf","timeDiff","isMins","secDiff","Math","round","Date","getTime","floor","Card","className","Box","display","flexDirection","alignItems","m","fontWeight","Typography","style","Link","href","variant","to","console","log","pathname","state","commentNum","header","borderBottom","headerText","removeUnderline","Header","Toolbar","exact","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","loadingText","margins","Loading","Helmet","justifyContent","flexWrap","p","css","position","top","right","bottom","left","options","width","length","get_top_posts","gql","get_direct_comments","get_sub_comments","smallLoaderLoop","Homepage","useQuery","notifyOnNetworkStatusChange","loading","error","data","fetchMore","networkStatus","CssBaseline","Container","maxWidth","posts","map","post","i","key","hasMore","onEnter","variables","after","cursor","updateQuery","prev","fetchMoreResult","CircularProgress","Subcomments","currentMargin","itemID","parseInt","newMargin","subcomments","childComments","comment","text","marginAmount","CommentTile","replace","marginString","toString","Grid","dangerouslySetInnerHTML","__html","Divider","commentsNum","Commentpage","props","match","params","location","by","align","Button","onClick","App","path","component","cache","InMemoryCache","link","HttpLink","uri","client","ApolloClient","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.934ccf19.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link as Redirect } from \"react-router-dom\";\r\nimport { Card, makeStyles, Link, Typography, Box } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 200,\r\n    padding: \"1em\",\r\n    margin: \"1em\",\r\n    background: \"#43455C\",\r\n  },\r\n  title: {\r\n    color: \"#a3add4\",\r\n    fontSize: 16,\r\n  },\r\n  underline: {\r\n    color: \"#a3add4\",\r\n  },\r\n  baseURL: {\r\n    fontSize: 12,\r\n  },\r\n  postInfo: {\r\n    color: \"#dedede\",\r\n  },\r\n  postInfoLinks: {\r\n    textDecoration: \"none\",\r\n    color: \"#dedede\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n  noLinkPostInfoLinks: {\r\n    textDecoration: \"none\",\r\n    color: \"#a3add4\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction PostTile({ title, id, user, url, comments, score, time }) {\r\n  const classes = useStyles();\r\n  var hasUrl;\r\n  if (url === null) {\r\n    hasUrl = false;\r\n  } else {\r\n    hasUrl = true;\r\n    // getting the baseURL\r\n    var noHttpsURL = url.substring(8);\r\n    var slash = noHttpsURL.indexOf(\"/\");\r\n    var baseURL = noHttpsURL.substring(0, slash);\r\n  }\r\n\r\n  const currentTime = Math.round(new Date().getTime() / 1000);\r\n  const secDiff = currentTime - time;\r\n  var timeDiff;\r\n  var isMins;\r\n  if (secDiff < 3600) {\r\n    // case that the seconds difference is less than one hour\r\n    timeDiff = Math.floor(secDiff / 60);\r\n    isMins = true;\r\n  } else {\r\n    // case that the seconds difference is greater than or equal to one hour\r\n    timeDiff = Math.floor(secDiff / 3600);\r\n    isMins = false;\r\n  }\r\n  return (\r\n    <Card className={classes.root}>\r\n      {hasUrl ? (\r\n        <Box display=\"flex\" flexDirection=\"row\">\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            m={1}\r\n            fontWeight=\"fontWeightBold\"\r\n          >\r\n            <Typography style={{ color: \"#3BBA9C\" }}>{score}</Typography>\r\n          </Box>\r\n          <Box m={1.3}>\r\n            <Link href={url} className={classes.underline}>\r\n              <Typography variant=\"subtitle1\" className={classes.title}>\r\n                {title} <a className={classes.baseURL}>({baseURL})</a>\r\n              </Typography>\r\n            </Link>\r\n            {isMins ? (\r\n              <Typography variant=\"subtitle2\" className={classes.postInfo}>\r\n                by {user} {timeDiff} minutes ago | {\"  \"}\r\n                <Redirect to={`/item/${id}`} className={classes.postInfoLinks}>\r\n                  {comments} comments\r\n                </Redirect>\r\n              </Typography>\r\n            ) : (\r\n              <Typography variant=\"subtitle2\" className={classes.postInfo}>\r\n                by {user} {timeDiff} hours ago | {\"  \"}\r\n                {console.log(`${title} ${comments}`)}\r\n                <Redirect\r\n                  to={{\r\n                    pathname: `/item/${id}`,\r\n                    state: { commentNum: comments },\r\n                  }}\r\n                  className={classes.postInfoLinks}\r\n                >\r\n                  {comments} comments\r\n                </Redirect>\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <Box display=\"flex\" flexDirection=\"row\">\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            m={1}\r\n            fontWeight=\"fontWeightBold\"\r\n          >\r\n            <Typography style={{ color: \"#3BBA9C\" }}>{score}</Typography>\r\n          </Box>\r\n          <Box m={1.3}>\r\n            <Redirect\r\n              to={`/item/${id}`}\r\n              className={classes.noLinkPostInfoLinks}\r\n            >\r\n              <Typography variant=\"subtitle1\" className={classes.title}>\r\n                {title}\r\n              </Typography>\r\n            </Redirect>\r\n            {isMins ? (\r\n              <Typography variant=\"subtitle2\" className={classes.postInfo}>\r\n                by {user} {timeDiff} minutes ago | {\"  \"}\r\n                <Redirect to={`/item/${id}`} className={classes.postInfoLinks}>\r\n                  {comments} comments\r\n                </Redirect>\r\n              </Typography>\r\n            ) : (\r\n              <Typography variant=\"subtitle2\" className={classes.postInfo}>\r\n                by {user} {timeDiff} hours ago | {\"  \"}\r\n                <Redirect to={`/item/${id}`} className={classes.postInfoLinks}>\r\n                  {comments} comments\r\n                </Redirect>\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default PostTile;\r\n","import React, { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n  header: {\r\n    padding: \"1.3em\",\r\n    borderBottom: \"1px solid #3BBA9C\",\r\n  },\r\n  headerText: {\r\n    color: \"#3BBA9C\",\r\n  },\r\n  removeUnderline: {\r\n    textDecoration: \"none\",\r\n  },\r\n});\r\nfunction Header() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Fragment>\r\n      <Toolbar color=\"inherit\" className={classes.header}>\r\n        <Link exact to=\"/\" className={classes.removeUnderline}>\r\n          <Typography variant=\"h6\" className={classes.headerText}>\r\n            HackerNews Clone\r\n          </Typography>\r\n        </Link>\r\n      </Toolbar>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Fragment } from \"react\";\r\nimport FadeIn from \"react-fade-in\";\r\nimport Lottie from \"react-lottie\";\r\nimport { Helmet } from \"react-helmet\"; // need this for set the background colour\r\n\r\n//loading animation\r\nimport * as loadingAnimation from \"./loadingAnimation.json\";\r\n\r\n// material ui element\r\nimport { Typography, Box, makeStyles } from \"@material-ui/core\";\r\nconst defaultOptions = {\r\n  loop: true,\r\n  autoplay: true,\r\n  animationData: loadingAnimation.default,\r\n  rendererSettings: {\r\n    preserveAspectRatio: \"xMidYMid slice\",\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  loadingText: {\r\n    margins: \"3em\",\r\n  },\r\n});\r\nfunction Loading() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\"application\">\r\n      <Helmet>\r\n        <style>{\"body { background-color: #2E3047; }\"}</style>\r\n      </Helmet>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\" // aligns item vertically\r\n        justifyContent=\"center\" // aligns item horizontally\r\n        flexWrap=\"wrap\"\r\n        p={1} // padding\r\n        m={1} // margins\r\n        // the props inside css made the box component take up the entire background\r\n        css={{\r\n          position: \"absolute\",\r\n          top: \"0\",\r\n          right: \"0\",\r\n          bottom: \"0\",\r\n          left: \"0\",\r\n        }}\r\n        flexDirection=\"column\"\r\n      >\r\n        <Box>\r\n          <Lottie options={defaultOptions} width={120} length={120} />\r\n          {/*the animation component */}\r\n        </Box>\r\n        <Box m={2}>\r\n          <Typography variant=\"h6\" style={{ color: \"#dedede\" }}>\r\n            Loading...\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const get_top_posts = gql`\r\n  query postList($after: Int) {\r\n    posts(after: $after) {\r\n      cursor\r\n      hasMore\r\n      posts {\r\n        title\r\n        id\r\n        user\r\n        url\r\n        score\r\n        comments\r\n        time\r\n        cursor\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const get_direct_comments = gql`\r\n  query commentList($id: Int!, $after: Int) {\r\n    comments(id: $id, after: $after) {\r\n      title\r\n      score\r\n      by\r\n      text\r\n      url\r\n      cursor\r\n      hasMore\r\n      comments {\r\n        text\r\n        id\r\n        user\r\n        childComments\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const get_sub_comments = gql`\r\n  query subcommentList($id: Int!) {\r\n    subcomments(id: $id) {\r\n      childComments {\r\n        text\r\n        id\r\n        user\r\n        childComments\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { Fragment } from \"react\";\r\nimport { Waypoint } from \"react-waypoint\"; // need this for infinite scrolling\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Helmet } from \"react-helmet\"; // need this to set background color\r\n\r\n// makeStyles for styling components, CssBaseline because it makes site look nice\r\n// Container for maxwidth\r\nimport {\r\n  makeStyles,\r\n  CssBaseline,\r\n  Container,\r\n  CircularProgress,\r\n} from \"@material-ui/core/\";\r\n\r\n// components\r\nimport PostTile from \"../components/PostTile.js\";\r\nimport Header from \"../components/Header.js\";\r\nimport Loading from \"../components/Loading.js\";\r\nimport { get_top_posts } from \"../queries/queries.js\";\r\nconst useStyles = makeStyles({\r\n  smallLoaderLoop: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: \"3em 0em 3em 0em\",\r\n  },\r\n});\r\n\r\nfunction Homepage() {\r\n  const classes = useStyles();\r\n  // notifyOnNetworkStatusChange: To make \"loading\" true when \"fetchMore\" runs.\r\n  // loading is true only on the first request on default behavior.\r\n  // fetchMore doesn't affect \"loading\" by default.\r\n  const { loading, error, data, fetchMore, networkStatus } = useQuery(\r\n    get_top_posts,\r\n    {\r\n      notifyOnNetworkStatusChange: true,\r\n    }\r\n  );\r\n  if (loading && networkStatus != 3) return <Loading />;\r\n  if (error) return <p>ERROR</p>;\r\n  if (!data) return <p>Not found</p>;\r\n\r\n  return (\r\n    <div className=\"application\">\r\n      <Helmet>\r\n        {/* need this to set the entire background color */}\r\n        <style>{\"body {background-color: #2E3047; \"}</style>\r\n      </Helmet>\r\n      <CssBaseline />\r\n      <Header />\r\n      <Container maxWidth=\"md\">\r\n        {data.posts &&\r\n          data.posts.posts &&\r\n          data.posts.posts.map((post, i) => (\r\n            <Fragment key={post.id + 10000}>\r\n              {/* add 10000 to avoid the same key warning */}\r\n              {/* PostTile is a block that contains the information of each\r\n                individual post */}\r\n              <PostTile\r\n                title={post.title}\r\n                id={post.id}\r\n                user={post.user}\r\n                url={post.url}\r\n                comments={post.comments}\r\n                score={post.score}\r\n                time={post.time}\r\n              />\r\n              {/* 19 should be the last element of the first page of posts*/}\r\n              {i % 19 === 0 && i != 0 && data.posts.hasMore && (\r\n                <Waypoint\r\n                  onEnter={() =>\r\n                    fetchMore({\r\n                      variables: {\r\n                        after: data.posts.cursor,\r\n                      },\r\n                      updateQuery: (prev, { fetchMoreResult }) => {\r\n                        if (!fetchMoreResult) return prev;\r\n                        return {\r\n                          ...fetchMoreResult,\r\n                          posts: {\r\n                            ...fetchMoreResult.posts,\r\n                            posts: [\r\n                              ...prev.posts.posts,\r\n                              ...fetchMoreResult.posts.posts,\r\n                            ],\r\n                          },\r\n                        };\r\n                      },\r\n                    })\r\n                  }\r\n                />\r\n              )}\r\n            </Fragment>\r\n          ))}\r\n\r\n        {/* adding loading indicator for when the next page is loading */}\r\n        <Container className={classes.smallLoaderLoop}>\r\n          {networkStatus === 3 && <CircularProgress />}\r\n        </Container>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React, { Fragment } from \"react\";\r\n\r\nimport { get_sub_comments } from \"../queries/queries.js\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport CommentTile from \"./CommentTile.js\";\r\nimport Loading from \"./Loading.js\";\r\nfunction Subcomments({ id, currentMargin }) {\r\n  const itemID = id;\r\n  const { loading, error, data, networkStatus } = useQuery(get_sub_comments, {\r\n    variables: {\r\n      id: parseInt(itemID), // parseInt makes query work\r\n    },\r\n    notifyOnNetworkStatusChange: true,\r\n  });\r\n  if (loading && networkStatus != 3) return <CircularProgress />;\r\n  if (error) return <p>ERROR</p>;\r\n  if (!data) return <p>Not found</p>;\r\n\r\n  const newMargin = currentMargin + 4;\r\n\r\n  return (\r\n    <Fragment>\r\n      {data.subcomments &&\r\n        data.subcomments.childComments &&\r\n        data.subcomments.childComments.length > 0 &&\r\n        data.subcomments.childComments.map((comment) => (\r\n          <CommentTile\r\n            text={comment.text}\r\n            user={comment.user}\r\n            id={comment.id}\r\n            marginAmount={newMargin}\r\n          />\r\n        ))}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Subcomments;\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  Card,\r\n  makeStyles,\r\n  Typography,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport Subcomments from \"./Subcomments.js\";\r\n\r\nconst useStyles = makeStyles({\r\n  comments: {\r\n    minWidth: 200,\r\n    padding: \"1em\",\r\n  },\r\n});\r\n\r\nfunction CommentTile({ text, user, id, marginAmount }) {\r\n  const classes = useStyles();\r\n  text = text.replace(\"a href\", 'a  style=\"color: #dedede\" href');\r\n  const itemID = id;\r\n  const marginString = marginAmount.toString() + \"em\";\r\n  console.log(marginString);\r\n  return (\r\n    <Fragment>\r\n      <Grid\r\n        className={classes.comments}\r\n        style={{ margin: `0em 1em 0em ${marginString}` }}\r\n      >\r\n        <Typography variant=\"subtitle2\" style={{ color: \"#a6a6a6\" }}>\r\n          {user}\r\n        </Typography>\r\n        <div\r\n          dangerouslySetInnerHTML={{ __html: text }}\r\n          style={{ color: \"#dedede\", textDecoration: \"none\" }}\r\n        />\r\n      </Grid>\r\n      <Divider variant=\"middle\" />\r\n      <Subcomments id={itemID} currentMargin={marginAmount} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default CommentTile;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Helmet } from \"react-helmet\"; // need this to set background color\r\nimport { Waypoint } from \"react-waypoint\"; // need this for infinite scrolling\r\nimport {\r\n  makeStyles,\r\n  CssBaseline,\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  Link,\r\n  Grid,\r\n  Divider,\r\n  CircularProgress,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { get_direct_comments } from \"../queries/queries.js\";\r\n// components\r\nimport Header from \"../components/Header.js\";\r\nimport Loading from \"../components/Loading.js\";\r\nimport CommentTile from \"../components/CommentTile.js\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 150,\r\n    padding: \"1.8em\",\r\n    margin: \"0em 1em 1em 1em\",\r\n    background: \"#43455C\",\r\n  },\r\n\r\n  underline: {\r\n    color: \"#a3add4\",\r\n  },\r\n  comments: {\r\n    minWidth: 150,\r\n    margin: \"1em\",\r\n    background: \"#43455c\",\r\n  },\r\n  commentsNum: {\r\n    minWidth: 150,\r\n    margin: \"0em 1em 0em 1em\",\r\n    padding: \"1em\",\r\n  },\r\n});\r\nfunction Commentpage(props) {\r\n  const classes = useStyles();\r\n  const itemID = props.match.params.id; // id of the current thread\r\n  const commentNum = props.location.state.commentNum;\r\n  const { loading, error, data, networkStatus, fetchMore } = useQuery(\r\n    get_direct_comments,\r\n    {\r\n      variables: {\r\n        id: parseInt(itemID), // parseInt makes query work\r\n      },\r\n      notifyOnNetworkStatusChange: true,\r\n    }\r\n  );\r\n\r\n  if (loading && networkStatus != 3) return <Loading />;\r\n  if (error) return <p>ERROR</p>;\r\n  if (!data) return <p>Not found</p>;\r\n  return (\r\n    <div className=\"application\">\r\n      <Helmet>\r\n        {/* need this to set the entire background color */}\r\n        <style>{\"body {background-color: #2E3047; \"}</style>\r\n      </Helmet>\r\n      <CssBaseline />\r\n      <Header />\r\n\r\n      <Container width=\"md\">\r\n        {data.comments && data.comments.comments && (\r\n          <Grid className={classes.root}>\r\n            <Link href={data.comments.url} className={classes.underline}>\r\n              <Typography variant=\"h6\">{data.comments.title}</Typography>\r\n            </Link>\r\n            <Typography variant=\"subtitle2\" style={{ color: \"#a6a6a6\" }}>\r\n              {data.comments.score} points | by {data.comments.by}\r\n            </Typography>\r\n            {data.comments.text && (\r\n              <Typography variant=\"subtitle2\">\r\n                <div\r\n                  dangerouslySetInnerHTML={{ __html: data.comments.text }}\r\n                  style={{ color: \"#a3add4\", textDecoration: \"none\" }}\r\n                />\r\n              </Typography>\r\n            )}\r\n          </Grid>\r\n        )}\r\n\r\n        <Grid className={classes.comments}>\r\n          {data.comments && data.comments.comments && (\r\n            <Fragment>\r\n              <Grid className={classes.commentsNum}>\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  align=\"left\"\r\n                  style={{ color: \"#dedede\" }}\r\n                >\r\n                  {commentNum} comments{\" \"}\r\n                </Typography>\r\n              </Grid>\r\n              <Divider variant=\"middle\" />\r\n            </Fragment>\r\n          )}\r\n          {data.comments &&\r\n            data.comments.comments &&\r\n            data.comments.comments.map((comment) => (\r\n              <Fragment>\r\n                <CommentTile\r\n                  text={comment.text}\r\n                  user={comment.user}\r\n                  id={comment.id}\r\n                  marginAmount={1}\r\n                />\r\n              </Fragment>\r\n            ))}\r\n          {data.comments.hasMore && (\r\n            <Box flexDirection=\"row\">\r\n              <Button // Button that loads more comments when user reaches the bottom of comments\r\n                variant=\"contained\"\r\n                onClick={() =>\r\n                  fetchMore({\r\n                    variables: {\r\n                      after: data.comments.cursor,\r\n                    },\r\n                    updateQuery: (prev, { fetchMoreResult }) => {\r\n                      if (!fetchMoreResult) return prev;\r\n                      return {\r\n                        ...fetchMoreResult,\r\n                        comments: {\r\n                          ...fetchMoreResult.comments,\r\n                          comments: [\r\n                            ...prev.comments.comments,\r\n                            ...fetchMoreResult.comments.comments,\r\n                          ],\r\n                        },\r\n                      };\r\n                    },\r\n                  })\r\n                }\r\n              >\r\n                More Comments\r\n              </Button>\r\n              <Container>\r\n                {networkStatus === 3 && <CircularProgress />}\r\n              </Container>\r\n            </Box>\r\n          )}\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Commentpage;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n// different pages for the site\r\nimport Homepage from \"./pages/Homepage.js\";\r\nimport Commentpage from \"./pages/Commentpage.js\";\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Homepage} />\r\n        <Route path=\"/item/:id\" component={Commentpage} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { HttpLink } from \"apollo-link-http\";\r\nimport App from \"./App.js\";\r\nimport gql from \"graphql-tag\";\r\n\r\nconst cache = new InMemoryCache();\r\nconst link = new HttpLink({\r\n  uri: \"/graphql\",\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  cache,\r\n  link,\r\n});\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}